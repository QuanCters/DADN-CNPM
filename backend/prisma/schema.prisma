generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int            @id @default(autoincrement())
  first_name    String         @db.VarChar(255)
  last_name     String         @db.VarChar(255)
  email         String         @unique @db.VarChar(255)
  password_hash String         @db.VarChar(255)
  access_token  String?        @default("") @db.VarChar(255)
  salt          String?        @default("") @db.VarChar(255)
  created_at    DateTime       @default(now()) @db.Timestamp(6)
  updated_at    DateTime       @updatedAt @db.Timestamp(6)
  user_in_home  user_in_home[]

  @@index([email], map: "idx_user_email")
}

model user_in_home {
  user_email String @db.VarChar(255)
  home_id    Int

  user users @relation(fields: [user_email], references: [email])
  home home  @relation(fields: [home_id], references: [id])

  @@id([user_email, home_id])
}

model device {
  id                       Int                        @id @default(autoincrement())
  status                   String                     @db.VarChar(50)
  type                     String                     @db.VarChar(50)
  power_rating             String                     @db.VarChar(50)
  room_name                String                     @db.VarChar(255)
  password                 String                     @db.VarChar(255)
  serial_number            String
  measurement              measurement[]
  schedule                 schedule[]
  log_event                log_event[]
  device_have_notification device_have_notification[]

  home home @relation(fields: [serial_number], references: [serial_number])

  @@index([room_name], map: "idx_device_roomname")
}

model measurement {
  id          Int      @id @default(autoincrement())
  usage_time  DateTime @db.Timestamp(6)
  consumption Int?
  device_id   Int?

  device device? @relation(fields: [device_id], references: [id])
}

model schedule {
  device_id   Int
  time_action DateTime @db.Timestamp(6)
  action      String   @db.VarChar(255)

  device device @relation(fields: [device_id], references: [id])

  @@id([time_action, device_id])
}

model log_event {
  id        Int       @id @default(autoincrement())
  time_in   DateTime? @db.Timestamp(6)
  time_out  DateTime? @db.Timestamp(6)
  action    String?   @db.VarChar(255)
  device_id Int?

  device device? @relation(fields: [device_id], references: [id])
}

model notification {
  id      Int     @id @default(autoincrement())
  content String? @db.Text

  device_have_notification device_have_notification[]
}

model device_have_notification {
  notification_id   Int
  device_id         Int
  notification_time DateTime? @db.Timestamp(6)

  notification notification @relation(fields: [notification_id], references: [id])
  device       device       @relation(fields: [device_id], references: [id])

  @@id([notification_id, device_id])
}

model home {
  id            Int            @id @default(autoincrement())
  serial_number String         @unique @db.VarChar(255)
  device        device[]
  user_in_home  user_in_home[]
}
